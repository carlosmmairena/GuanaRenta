/*
 * Clase que contiene la funcionalidad de obtener, modificar, eliminar y editar los inquilinos
 */
package com.guanarenta.view;

import com.guanarenta.clases.Inquilino;
import com.guanarenta.connections.Enlace;
import com.guanarenta.connections.OperacionesInquilino;
import com.guanarenta.storage.StorageInquilinos;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.time.Instant;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sharlene Guadamuz
 * @author Carlos Mairena
 */
public class DlgInquilinos extends javax.swing.JDialog {

    StorageInquilinos storageInquilinos;
    Inquilino inquilino;

    String ENCABEZADO_TABLA[];
    DefaultTableModel inquilinosTabla;
    private int inQui;

    OperacionesInquilino operacionI;

    /**
     * Creates new form DlgInquilinos
     *
     * @param parent
     * @param modal
     */
    public DlgInquilinos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.operacionI = new OperacionesInquilino();

        this.storageInquilinos = new StorageInquilinos();
        this.inquilino = null;
        this.inquilinosTabla = null;
        this.inQui = -1;
    }

    /**
     * Constructor que permite abrir este Dialog y se usa cuando se abre desde el men√∫ principal
     *
     * @param parent
     * @param modal
     * @param storageInquilinos
     */
    public DlgInquilinos(java.awt.Frame parent, boolean modal, StorageInquilinos storageInquilinos) {
        super(parent, modal);
        initComponents();
        this.operacionI = new OperacionesInquilino();

        this.storageInquilinos = storageInquilinos;
        this.inquilino = null;
        this.inquilinosTabla = null;
        this.inQui = -1;
    }

    /**
     * Constructor que permite abrir este Dialog y se usa cuando se abre desde los alquileres
     *
     * @param parent
     * @param modal
     * @param storageInquilinos
     * @param inQui
     */
    public DlgInquilinos(java.awt.Frame parent, boolean modal, StorageInquilinos storageInquilinos, int inQui) {
        super(parent, modal);
        initComponents();
        this.operacionI = new OperacionesInquilino();

        this.storageInquilinos = storageInquilinos;
        this.inquilino = null;
        this.inquilinosTabla = null;
        this.inQui = inQui;
        this.tbdInquilinos.setTitleAt(0, "Seleccionar");
        tblInquilinos.setToolTipText("Haga doble click en un inquilino para seleccionarlo");
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngGeneros = new javax.swing.ButtonGroup();
        jToolBar1 = new javax.swing.JToolBar();
        tbdInquilinos = new javax.swing.JTabbedPane();
        pnlBaseTablaInquilinos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInquilinos = new javax.swing.JTable();
        pnlOpcionesInquilino = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnInicio = new javax.swing.JButton();
        lblTituloInquilinos = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        lblTotal = new javax.swing.JLabel();
        pnlInquilino = new javax.swing.JPanel();
        txtEmail = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        rdbM = new javax.swing.JRadioButton();
        rdbF = new javax.swing.JRadioButton();
        lblGenero = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        lblCedula = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        lblDireccion = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        lblOcupacion = new javax.swing.JLabel();
        txtOcupacion = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        lblFechNacimiento = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnLimpiarCampos = new javax.swing.JButton();
        dtpFechNaci = new com.toedter.calendar.JDateChooser();
        txtTelefono = new javax.swing.JTextField();

        jToolBar1.setRollover(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("GuanaRenta - Inquilinos");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlBaseTablaInquilinos.setBackground(new java.awt.Color(254, 254, 254));

        tblInquilinos.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        tblInquilinos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblInquilinos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblInquilinos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblInquilinos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblInquilinosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblInquilinos);

        pnlOpcionesInquilino.setBackground(new java.awt.Color(254, 254, 254));
        pnlOpcionesInquilino.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));

        btnNuevo.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/guanarenta/img/add.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/guanarenta/img/delete.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/guanarenta/img/edit.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnInicio.setBackground(new java.awt.Color(225, 241, 249));
        btnInicio.setFont(new java.awt.Font("Noto Sans", 1, 12)); // NOI18N
        btnInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/guanarenta/img/back.png"))); // NOI18N
        btnInicio.setText("Regresar");
        btnInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInicioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlOpcionesInquilinoLayout = new javax.swing.GroupLayout(pnlOpcionesInquilino);
        pnlOpcionesInquilino.setLayout(pnlOpcionesInquilinoLayout);
        pnlOpcionesInquilinoLayout.setHorizontalGroup(
            pnlOpcionesInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlOpcionesInquilinoLayout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        pnlOpcionesInquilinoLayout.setVerticalGroup(
            pnlOpcionesInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOpcionesInquilinoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOpcionesInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        lblTituloInquilinos.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        lblTituloInquilinos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTituloInquilinos.setText("Buscar nombre");

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlBaseTablaInquilinosLayout = new javax.swing.GroupLayout(pnlBaseTablaInquilinos);
        pnlBaseTablaInquilinos.setLayout(pnlBaseTablaInquilinosLayout);
        pnlBaseTablaInquilinosLayout.setHorizontalGroup(
            pnlBaseTablaInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBaseTablaInquilinosLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(pnlBaseTablaInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlBaseTablaInquilinosLayout.createSequentialGroup()
                        .addComponent(lblTituloInquilinos, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pnlOpcionesInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addGap(34, 34, 34))
            .addGroup(pnlBaseTablaInquilinosLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlBaseTablaInquilinosLayout.setVerticalGroup(
            pnlBaseTablaInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBaseTablaInquilinosLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(pnlBaseTablaInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlBaseTablaInquilinosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTituloInquilinos, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(pnlOpcionesInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
        );

        tbdInquilinos.addTab("Disponibles", pnlBaseTablaInquilinos);

        pnlInquilino.setBackground(new java.awt.Color(254, 254, 254));

        lblEmail.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblEmail.setText("E-mail");

        lblTelefono.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTelefono.setText("Tel√©fono");

        btngGeneros.add(rdbM);
        rdbM.setText("Masculino");

        btngGeneros.add(rdbF);
        rdbF.setText("Femenino");

        lblGenero.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblGenero.setText("Genero");

        txtCedula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaKeyTyped(evt);
            }
        });

        lblCedula.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCedula.setText("Num.Cedula");

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });

        lblNombre.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNombre.setText("Nombre");

        lblDireccion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDireccion.setText("Direccion");

        lblOcupacion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblOcupacion.setText("Ocupaci√≥n");

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/guanarenta/img/save.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        lblFechNacimiento.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFechNacimiento.setText("Fech. Nacimiento");

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/guanarenta/img/cancelar.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnLimpiarCampos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/guanarenta/img/clean.png"))); // NOI18N
        btnLimpiarCampos.setText("Limpiar Campos");
        btnLimpiarCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarCamposActionPerformed(evt);
            }
        });

        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlInquilinoLayout = new javax.swing.GroupLayout(pnlInquilino);
        pnlInquilino.setLayout(pnlInquilinoLayout);
        pnlInquilinoLayout.setHorizontalGroup(
            pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInquilinoLayout.createSequentialGroup()
                .addGroup(pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInquilinoLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblGenero, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTelefono, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlInquilinoLayout.createSequentialGroup()
                                .addComponent(rdbF)
                                .addGap(18, 18, 18)
                                .addComponent(rdbM, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlInquilinoLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblDireccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblOcupacion, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)))
                            .addGroup(pnlInquilinoLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(lblFechNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtOcupacion, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                            .addComponent(txtEmail)
                            .addComponent(txtDireccion)
                            .addComponent(dtpFechNaci, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(pnlInquilinoLayout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(btnLimpiarCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlInquilinoLayout.setVerticalGroup(
            pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInquilinoLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInquilinoLayout.createSequentialGroup()
                        .addGroup(pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNombre)
                            .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCedula)
                            .addComponent(lblCedula, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlInquilinoLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(lblGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlInquilinoLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rdbM, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rdbF, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(pnlInquilinoLayout.createSequentialGroup()
                        .addGroup(pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtOcupacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblOcupacion, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(14, 14, 14)
                .addGroup(pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblFechNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTelefono))
                    .addComponent(dtpFechNaci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                .addGroup(pnlInquilinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnLimpiarCampos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(53, 53, 53))
        );

        tbdInquilinos.addTab("A√±adir", pnlInquilino);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tbdInquilinos)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tbdInquilinos)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // Al momento de que den al bot√≥n de nuevo
        this.cambiarPesta√±aEN();

    }//GEN-LAST:event_btnNuevoActionPerformed

    private void txtCedulaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaKeyTyped
        // Solo acepta numeros
        char tecla;
        tecla = evt.getKeyChar();
        if (!Character.isDigit(tecla) && tecla != KeyEvent.VK_BACK_SPACE) {
            evt.consume();
        }
    }//GEN-LAST:event_txtCedulaKeyTyped

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
        // Solo acepta letras
        char tecla;
        tecla = evt.getKeyChar();
        if (Character.isDigit(tecla) && tecla != KeyEvent.VK_BACK_SPACE) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreKeyTyped

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // Al momento de abrir la ventana
        tbdInquilinos.setEnabledAt(1, false);
        this.rellenarTabla();

    }//GEN-LAST:event_formWindowOpened

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        this.btnGuarda();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // Bot√≥n que llama al m√©todo que elimina un inquilino envi√°ndole un √≠ndice
        try {
            int index = tblInquilinos.getSelectedRow();
            this.storageInquilinos.borrarInquilino(index);
            this.rellenarTabla();
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "Por favor aseg√∫rese de seleccionar un inquilino");
            System.out.println(ex.getCause());
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // Bot√≥n que obtiene los datos de la ventana
        try {

            this.limpiarCampos(); // Limpiamos los campos
            int index = tblInquilinos.getSelectedRow(); // Obtenemos el √≠ndice de la tabla donde se seleccion√≥ un inquilino
            this.inquilino = new Inquilino(); // Inicializamos al inquilino

            this.inquilino = this.storageInquilinos.obtenerInquilino(index); // Obtenemos los datos del inquilino seleccionado desde la lista de vectores

            // Obtenemos los datos del inquilino seleccionado
            txtNombre.setText(this.inquilino.getNomInqui());
            txtCedula.setText(Long.toString(this.inquilino.getCedInqui()));
            txtEmail.setText(inquilino.getEmail());
            txtTelefono.setText(String.valueOf(inquilino.getTelefono()));
            txtDireccion.setText(this.inquilino.getDireccion());
            txtOcupacion.setText(this.inquilino.getOcupacion());

            // Falta mostrar la fecha de nacimiento al inquilino en el momento de que se le de editar
            dtpFechNaci.setDate(this.inquilino.getFechNac());

            if (inquilino.getGenero() == 'F') {
                rdbF.setSelected(true);
            } else {
                rdbM.setSelected(true);
            }

            tbdInquilinos.setTitleAt(1, "Editar"); // Cambiamos el t√≠tulo de la pesta√±a
            this.cambiarPesta√±aEN(); // Nos dirigimos a la pesta√±a para editar los campos

        } catch (ArrayIndexOutOfBoundsException ex) {
            // En caso de que no seleccionaron ning√∫n inquilino
            JOptionPane.showMessageDialog(this, "Por favor aseg√∫rese de seleccionar un propietario");
            System.out.println(ex.getCause());
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // Regresa a la tabla
        this.cambiarPesta√±aTa();
        this.limpiarCampos();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnLimpiarCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarCamposActionPerformed
        // Bot√≥n limpiar campos
        this.limpiarCampos();
    }//GEN-LAST:event_btnLimpiarCamposActionPerformed

    private void tblInquilinosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblInquilinosMouseClicked
        // Si el t√≠tulo de la pesta√±a dice "Selecciona" y la cantidad de clicks es de 2, entonces obtiene el √≠ndice y cierra la ventana
        if (evt.getClickCount() == 2 && tbdInquilinos.getTitleAt(0).equals("Seleccionar")) {
            this.inQui = tblInquilinos.getSelectedRow();
            System.out.println("Se ha seleccionado el inquilino: " + storageInquilinos.obtenerInquilino(inQui).getNomInqui());
            this.dispose();
        }

    }//GEN-LAST:event_tblInquilinosMouseClicked

    private void btnInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInicioActionPerformed
        // Cerramos la ventana
        this.dispose();
    }//GEN-LAST:event_btnInicioActionPerformed

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        // TODO add your handling code here:
        this.ENCABEZADO_TABLA = new String[]{"Nombre", "C√©dula", "G√©nero", "E-mail", "Tel√©fono", "Ocupaci√≥n", "Fecha Nacimiento"};
        this.inquilino = new Inquilino();
        this.inquilinosTabla = new DefaultTableModel(null, this.ENCABEZADO_TABLA) {
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };

        if (txtBuscar.getText().length() == 0) {
            this.rellenarTabla();

        } else {
            for (byte i = 0; i < storageInquilinos.getTotal(); i++) {

                this.inquilino = storageInquilinos.obtenerInquilino(i);
                if (inquilino.getNomInqui().regionMatches(true, 0, txtBuscar.getText(), 0, txtBuscar.getText().length())) {
                    this.inquilino = storageInquilinos.obtenerInquilino(i);

                    Object registro[] = {this.inquilino.getNomInqui(), this.inquilino.getCedInqui(), this.inquilino.getGenero(),
                        this.inquilino.getEmail(), this.inquilino.getTelefono(), this.inquilino.getOcupacion(),
                        this.inquilino.getFechNac()};
                    this.inquilinosTabla.addRow(registro);

                }
            }
            tblInquilinos.setModel(inquilinosTabla);
        }
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void txtTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgInquilinos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgInquilinos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgInquilinos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgInquilinos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgInquilinos dialog = new DlgInquilinos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnInicio;
    private javax.swing.JButton btnLimpiarCampos;
    private javax.swing.JButton btnNuevo;
    private javax.swing.ButtonGroup btngGeneros;
    private com.toedter.calendar.JDateChooser dtpFechNaci;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblCedula;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblFechNacimiento;
    private javax.swing.JLabel lblGenero;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblOcupacion;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JLabel lblTituloInquilinos;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JPanel pnlBaseTablaInquilinos;
    private javax.swing.JPanel pnlInquilino;
    private javax.swing.JPanel pnlOpcionesInquilino;
    private javax.swing.JRadioButton rdbF;
    private javax.swing.JRadioButton rdbM;
    private javax.swing.JTabbedPane tbdInquilinos;
    private javax.swing.JTable tblInquilinos;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtOcupacion;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables

    /**
     * Se llama al pulsar el bot√≥n guardar
     */
    private void btnGuarda() {
        // M√©todo para verificar que cambia de color el borde del campo que este vacio
        //CambioColorBordes();
        // falta validar de que ingresen correctamente los datos

        if (verificarDatos()) { // Si los campos no est√°n vac√≠os
            try {

                this.inquilino = new Inquilino();
                long fechObt = dtpFechNaci.getDate().getTime(); // del selector de fecha

                // Obtenemos los datos
                this.inquilino.setNomInqui(txtNombre.getText());
                this.inquilino.setDireccion(txtDireccion.getText());
                this.inquilino.setEmail(txtEmail.getText());
                this.inquilino.setOcupacion(txtOcupacion.getText());
                this.inquilino.setTelefono(Integer.parseInt(txtTelefono.getText()));
                this.inquilino.setCedInqui(Long.parseLong(txtCedula.getText()));
                this.inquilino.setFechNac(new java.sql.Date(fechObt)); // Obtenemos la fecha
                this.inquilino.setGenero(this.obtenerGenero());

                if (tbdInquilinos.getTitleAt(1).equals("A√±adir")) { // Si el t√≠tulo dice A√±adir

                    if (operacionI.ExisteUsuario(Enlace.crearEnlace(), inquilino.getCedInqui(), "Inquilino") > 0) {

                        //this.inquilino.setCedInqui(Long.parseLong(txtCedula.getText()));
                        //this.storageInquilinos.guardaInquilino(inquilino);
                        if (operacionI.guardarInquilino(Enlace.crearEnlace(), inquilino)) {
                            JOptionPane.showMessageDialog(this, "Inquilino guardado");
                        } else {
                            JOptionPane.showMessageDialog(this, "Hubo inconvenientes para guardar el inquilino");
                        }

                    } else {
                        // Si la c√©dula est√° ya registrada
                        JOptionPane.showMessageDialog(this, "Esta c√©dula ya fue registrada");
                        txtCedula.setText("");
                    }

                } else { // Si el t√≠tulo no dice a√±adir, entonces es para editar
                    // DEBER√çAMOS COMPROBAR DE QUE LA C√âDULA NO APAREZCA M√ÅS DE 1 VEZ, YA QUE LA 1RA VEZ ES CUANDO YA SE REGISTR√ì

                    this.inquilino.setCedInqui(Long.parseLong(txtCedula.getText()));
                    int index = tblInquilinos.getSelectedRow();
                    //this.storageInquilinos.editarInquilino(index, this.inquilino);

                }

                this.limpiarCampos();
                this.rellenarTabla();
                this.cambiarPesta√±aTa();

            } catch (NumberFormatException es) { // En caso de que el usuario ha digitado mal los tipos de datos
                JOptionPane.showMessageDialog(this, "Por favor ingrese correctamente los datos.");
                System.out.println(es.getCause());
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(DlgInquilinos.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else { // En caso de que alg√∫n campo est√© en blanco
            JOptionPane.showMessageDialog(this, "Por favor rellene todos los campos");
        }
    }

    /**
     * M√©todo para comprobar si se ha ingresado todos los datos
     */
    private boolean verificarDatos() {
        return obtenerGenero() != 'N' && !txtCedula.getText().isEmpty() && !txtNombre.getText().isEmpty()
                && !txtEmail.getText().isEmpty() && !txtTelefono.getText().isEmpty() && !txtDireccion.getText().isEmpty()
                && !txtOcupacion.getText().isEmpty() && (dtpFechNaci.getDate() != Date.from(Instant.now()));

    }

    /**
     *
     * M√©todo que devuelve el tipo de g√©nero del/la inquilina
     *
     * @return F Equivale a Femenino |
     * @return M Equivale a Masculino
     */
    private char obtenerGenero() {
        if (rdbF.isSelected()) {
            return rdbF.getText().charAt(0);
        } else if (rdbM.isSelected()) {
            return rdbM.getText().charAt(0);
        } else {
            return 'N';
        }
    }

    /**
     * M√©todo que cambia la pesta√±a a la que est√° la tabla
     */
    private void cambiarPesta√±aTa() {

        tbdInquilinos.setEnabledAt(0, true);
        tbdInquilinos.setSelectedIndex(0);
        tbdInquilinos.setEnabledAt(1, false);
    }

    /**
     * M√©todo que cambia de pesta√±a a editar/nuevo
     */
    private void cambiarPesta√±aEN() {
        tbdInquilinos.setEnabledAt(1, true);
        tbdInquilinos.setSelectedIndex(1);
        tbdInquilinos.setEnabledAt(0, false);
    }

    /**
     * M√©todo para limpiar los campos
     */
    private void limpiarCampos() {

        txtCedula.setText("");
        txtDireccion.setText("");
        txtEmail.setText("");
        txtNombre.setText("");
        txtOcupacion.setText("");
        txtTelefono.setText("");
        btngGeneros.clearSelection();
        dtpFechNaci.setDate(Date.from(Instant.now()));

    }

    /**
     * M√©todo para rellenar la tabla
     */
    private void rellenarTabla() {

        try {
            //        this.ENCABEZADO_TABLA = new String[]{"Nombre", "C√©dula", "G√©nero", "E-mail", "Tel√©fono", "Ocupaci√≥n", "Fecha Nacimiento"};
//        this.inquilino = new Inquilino();
//        this.inquilinosTabla = new DefaultTableModel(null, this.ENCABEZADO_TABLA) {
//            @Override
//            public boolean isCellEditable(int rowIndex, int columnIndex) {
//                return false;
//            }
//        };

//        for (byte i = 0; i < storageInquilinos.getTotal(); i++) {
//
//            this.inquilino = storageInquilinos.obtenerInquilino(i);
//            Object registro[] = {this.inquilino.getNomInqui(), this.inquilino.getCedInqui(), this.inquilino.getGenero(),
//                this.inquilino.getEmail(), this.inquilino.getTelefono(), this.inquilino.getOcupacion(), this.inquilino.getFechNac()};
//
//            this.inquilinosTabla.addRow(registro);
//
//        }
            this.inquilinosTabla = operacionI.TodoInquilinos(Enlace.crearEnlace(), "Inquilinos");
            this.tblInquilinos.setModel(this.inquilinosTabla);
            lblTotal.setText("Total de inquilinos registrados: " + tblInquilinos.getRowCount());

        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(DlgInquilinos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * M√©todo para cambiar de color los bordes de un txt si no esta en blanco
     *
     */
    public void CambioColorBordes() {

        if (txtCedula.getText().isEmpty()) {
            txtCedula.setBorder(new LineBorder(Color.RED));
        }
        if (txtDireccion.getText().isEmpty()) {
            txtDireccion.setBorder(new LineBorder(Color.RED));
        }
        if (txtEmail.getText().isEmpty()) {
            txtEmail.setBorder(new LineBorder(Color.RED));
        }
        if (txtNombre.getText().isEmpty()) {
            txtNombre.setBorder(new LineBorder(Color.RED));
        }
        if (txtOcupacion.getText().isEmpty()) {
            txtOcupacion.setBorder(new LineBorder(Color.RED));
        }
        if (txtTelefono.getText().isEmpty()) {
            txtTelefono.setBorder(new LineBorder(Color.RED));
        }

    }

    public int getInQui() {
        return inQui;
    }

    public void setInQui(int inQui) {
        this.inQui = inQui;
    }
}
